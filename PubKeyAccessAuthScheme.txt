DRAFT VERSION 0.1
PubKey Access Authentication Scheme, Version 0.1
Oliver Vaughn Gould <ver@yahoo-inc.com>


  1  Introduction
  ---------------

  1.1  Purpose
  ------------

HTTP services are a core Internet technology, yet the Digest authentication
scheme provided by RFC 2617 only describes authentication via shared-secrets.
This model has operational drawbacks, as authenticating services are required to
have access to a user's secret, or degenerate Cookie-technologies are relied
employed.

The PubKey Access Authentication scheme aims to enhance security on the World
Wide Web by bringing client-side private-keys from the SSH "publickey"
authentication method (RFC 4252, Sec. 7) to challenge-based HTTP client
authentication (RFC 2617).


  1.2  Overall Operation
  ----------------------

Like the Digest Access Authentication Scheme, the PubKey.v1 scheme is based on a
simple challenge-response paradigm.  The PubKey scheme challenges; and a valid
response contains a cryptographic signature of the client's identifier, the
authentication realm, and the server's challenge.

The client's secret never leaves the client.

  1.3  Representation of Signature
  --------------------------------

XXX

  2  Specification of PubKey.v1 Headers
  ---------------------------------------

  2.1  The WWW-Authenticate Response Header
  -----------------------------------------

If a server receives a request for an access-protected object, and an
acceptable Authorization header is not sent, the server responds with
a "401 Unauthorized" status code, and a WWW-Authenticate header as
per the framework defined above, which for the digest scheme is
utilized as follows:

    challenge         = "PubKey.v1" pubkey-challenge

    pubkey-challenge  = 1#( realm | [domain] | auth-challenge )

    domain            = "domain" "=" <"> URI ( 1*SP URI ) <">
    auth-challenge    = "challenge" "=" quoted-string

The meanings of the values of the directives used above are as follows:

    realm
      A string to be displayed to clients so they know which username and public
      key to use.  This string should contain at least the name of the host
      performing the authentication and might additionally indicate the
      collection of users who might have access.  An example might be
      "admin@svc.jersey.ops.yahoo.com".  [RFC2617]

    domain
      A quoted, space-separated list of URIs that define the protection space.
      If a URI is an abs_path, it is relative to the canonical root URL of the
      server being accessed. An absoluteURI in this list may refer to a
      different server than the one being accessed. The client can use this list
      to determine the set of URIs for which the same authentication information
      may be sent: any URI that has a URI in this list as a prefix (after both
      have been made absolute) may be assumed to be in the same protection
      space. If this directive is omitted or its value is empty, the client
      should assume that the protection space consists of all URIs on the
      responding server.

      This directive is not meaningful in Proxy-Authenticate headers, for which
      the protection space is always the entire proxy; if present it should be
      ignored.  [RFC2617]

    challenge
      A string of data, specified by the server, which should be returned by the
      client unchanged in the Authorization header of subsequent requests with
      URIs in the same protection space.  It is recommended that this string be
      base64 or hexadecimal data.


  2.2.2  The Authorization Request Header
  -------------------------------------

The client is expected to retry the request, passing an Authorization
header line, which is defined according to the framework above,
utilized as follows.

    credentials          = "PubKey.v1" privkey-credentials

    privkey-credentials  = 1#( identifier | realm | challenge | signature )

    identifier           = "identifier" "=" identifier-value
    identifier-value     = quoted-string
    challenge            = "challenge" "=" challenge-value
    challenge-value      = quoted-string
    signature            = "challenge" "=" signature-value
    signature-value      = quoted-string
XXX pubkey-uri           = "pubkey-uri" "=" pubkey-uri-value
XXX pubkey-uri-value     = request-uri

The values of the challenge and realm fields must be those supplied in the
WWW-Authenticate response header for the entity being requested.

    identifier
      The client identifier in the specified realm.

    signature
      
XXX pubkey-uri
      URI point

If a directive or its value is improper, or required directives are missing, the
proper response is 400 Bad Request.  If the signature is invalid, then a login
failure should be logged, since repeated login failures from a single client may
indicate an malfeasance.


  2.X Example
  -----------

> GET /
> Host: svc.ops.yahoo.com
> 

< 401 Unauthorized
< WWW-Authenticate: PubKey/0.1
<	challenge="f83a81738ebf7e8530750b699213cfc598dbd7de5489b0abf4d17e0afeff09a8;dXNlcnNAY3JlZC5qZXJzZXk7ZGQ1NjA1MzMyYzMyOGUwZTlkMzJjNDliMDdhNDNlYWU1OGJhNDA2OTE2MzExMjhjODIyYTU0MTA5YmJkMGI0ODsxMjcuMC4wLjE7MTI3NzQxNzY3NA==;dd5605332c328e0e9d32c49b07a43eae58ba40691631128c822a54109bbd0b48",
<	realm="range@domain"

> GET /
> Host: svc.ops.yahoo.com
> Authorization: PUBKEY/0.1 username="ver",
>	challenge="f83a81738ebf7e8530750b699213cfc598dbd7de5489b0abf4d17e0afeff09a8;dXNlcnNAY3JlZC5qZXJzZXk7ZGQ1NjA1MzMyYzMyOGUwZTlkMzJjNDliMDdhNDNlYWU1OGJhNDA2OTE2MzExMjhjODIyYTU0MTA5YmJkMGI0ODsxMjcuMC4wLjE7MTI3NzQxNzY3NA==;dd5605332c328e0e9d32c49b07a43eae58ba40691631128c822a54109bbd0b48",
>	realm="range@domain",
>	signature="AAAAB3NzaC1yc2EAAAIAG4Q5y0Gzw7wxUunm4i1RkRMHW1RiUbPrHA9L65V0L2PbpyqbO/UjFhj/ay4qWIjmrPn8DYPm7VR9cwBq1ufOFRllykK8mgK5b3StoDnN0+bx40tf0SPWXq7rfj50hGd2zRb99fpkZ10pnuHbzaVw2Evg5mmv/dn0FYb4xEHWTrZzTggT+SPQtEMuUi5jDoilIY5/vbWdmPRMHGntUWDiYimZBcA21vNRy2DMuMhE8+uHL5bRFNYQe0Ja8TfmTrRQbN+0mrDCZAK3Xq9XmilXmkxae+SxM1M5Xs9hJthxAbxt437NEKF62WNeGA5blZz8uiXfIieBCBI8tn81LCdsU1LVvJRQ8i1hTilY9YASSdiB4BLxmLAyHUFr2MLJtkEvBKGuOXQUJyHHEL2cqY2xPShDa1d59o8wC4A/rUOKXFe9GSee5YiA17tO14hYBcBTofRSFDPnq/VesaEYARhiSbxKtBViZpPaIatyU7Cy28OLkNl52r1bJ6vWbR+oC9FIkXqlZqZ/LMr6kOKK1oc10+tTt8OzbsnqaEAXBoH0NkjBCAQP6sg/GSRjSDpxJFq564DgdVhlgI8AJ6zKwqI72n66EzJhlttLH4Mx8CePDiVuVL3oWjee75nCFWogZogRqNgTdaGuk3MnJZ81pd4eR7lSC/IxYSomSJf8xphkoo4="

